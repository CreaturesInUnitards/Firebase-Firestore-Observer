const FBObserve=(a,b,c)=>{function d(n){const p=n.doc.id,q=n.doc.data(),s=Array.isArray(f),t=s?f.find(u=>u.id===p):f[p];switch(n.type){case'added':const u={id:p,data:q};s?f.push(u):f[g||p]=u;break;case'modified':if(t){t.data=q;break}case'removed':t&&(s?f.splice(f.indexOf(t),1):delete f[g||p]);}return new Promise(u=>u()).then(c.callback)}const f='undefined'==typeof b.FBLocalObject?b:b.FBLocalObject,g=b.FBLocalProp;if(b.FBLocalObject&&!g)throw new Error('FBObserver received FBLocalObject without FBLocalProp.');const h=c&&c.redrawFn?c.redrawFn:'undefined'==typeof m?()=>{throw new Error('FBObserver needs a valid redraw function')}:m.redraw,i=c.condition,j=c.crudFn||d,k=firebase.firestore().collection(a),l=i?k.where(i[0],i[1],i[2]):k;l.onSnapshot(n=>{n.docChanges.forEach(p=>{new Promise(q=>{(j||d)(p).then(q)}).then(h).catch(q=>console.log(q,'Your CRUD function must return a promise.'))})})};'object'==typeof module?module.exports=FBObserve:'undefined'==typeof window?global.FBObserve=FBObserve:window.FBObserve=FBObserve;
